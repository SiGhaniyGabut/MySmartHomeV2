class Response:
    def __init__(self, response, save_to: str=''): ...

class DataStream:
    """
    A class to handle data streams, interfacing with the requests library.
    This class is used to write data to a file from a stream, such as a response from a GET request.
    """

    def __init__(self, data, save_to: str): ...
    def write(self, chunk_size: int = 512):
        """
        Write data to a file from a stream.
        """
        ...

class HttpClient:
    """
    A class to handle HTTP requests, interfacing urequests library.
    """

    def __init__(self): ...
    def get(self, url: str, params: dict={}, headers: dict={}, **kwargs): ...
    def post(self, url: str, data: dict = {}, headers: dict = {}, **kwargs): ...
    def put(self, url: str, data: dict = {}, headers: dict = {}, **kwargs): ...
    def patch(self, url: str, data: dict = {}, headers: dict = {}, **kwargs): ...
    def delete(self, url: str, headers: dict = {}, **kwargs): ...
    def request(self, method: str, url: str, params: dict={}, data: dict={}, headers: dict={}, stream=False, save_to: str='', **kwargs):
        """
        Make a HTTP request to a given URL with the given method.
        """
        ...

    def __headers(self, headers: dict = {}): ...
    def __params(self, params: dict = {}): ...